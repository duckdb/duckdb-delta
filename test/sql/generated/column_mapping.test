# name: test/sql/generated/column_mapping.test
# description: Test column mapping & schema evolution
# group: [generated]

require parquet

require delta

require-env GENERATED_DATA_AVAILABLE

# evolution_simple:
# CREATE TABLE evolution_simple AS SELECT CAST(1 AS INT) AS a;
# ALTER TABLE evolution_simple ADD COLUMN b BIGINT;,
# INSERT INTO evolution_simple VALUES (2, 2);
query II
from parquet_scan('./data/generated/evolution_simple/delta_lake/**/*.parquet', union_by_name=1) order by a
----
1	NULL
2	2

query II
from delta_scan('./data/generated/evolution_simple/delta_lake') order by a
----
1	NULL
2	2

# Now test with column mapped table
query II
from delta_scan('./data/generated/evolution_simple_name_mode/delta_lake') order by a
----
1	NULL
2	2

# evolution_column_change:
# CREATE TABLE evolution_column_change AS SELECT 'value1' AS a, 'value2' AS b;
# ALTER TABLE evolution_column_change DROP COLUMN b;
# INSERT INTO evolution_column_change VALUES ('value3');
# ALTER TABLE evolution_column_change ADD COLUMN b BIGINT;
# INSERT INTO evolution_column_change VALUES ('value4', 5);

query II
from delta_scan('./data/generated/evolution_column_change/delta_lake') order by a
----
value1	NULL
value3	NULL
value4	5

query II
SELECT a,b from delta_scan('./data/generated/evolution_column_change/delta_lake') order by a
----
value1	NULL
value3	NULL
value4	5

# Ensure we play ball with projections and generated columns, etc
query IIII
SELECT file_row_number, filename.substring(-8,8), b, a from delta_scan('./data/generated/evolution_column_change/delta_lake') order by a
----
0	.parquet	NULL	value1
0	.parquet	NULL	value3
0	.parquet	5	value4
